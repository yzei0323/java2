자바4일차
-reflect학습하기
-변경에 유리한 코드작성하기

학습목표:  1. Class 클래스를 이용하여 객체를 생성하는 경험을 갖는다
               2. 클래스정보를 얻어오는 3가지 방법을 학습한다
               3. reflect로 매서드 호출하는 방법을 학습한다
               4. 2인 1조 변경에 유리한 코드를 작성하는 경험을 갖는다  (인터페이스와 reflect사용하기)   

 
1. reflect  

 : 클래스로더를 통해 읽어온 클래스 정보(거울에 반사된 정보)를 사용하는 기술 
   런타임에서 클래스 ,인터페이스 , 매서드 , 필드 등을 분석 및 조작
   리플렉션을 사용해 클래스를 읽어오거나, 인스턴스를 만들거나, 매소드를 실행하거나, 필드의 값을 가져오거나 변경하는 것이 가능하다  
   일반적으로 라이브러리나 프레임워크에서 많이 사용- 스프링 
   // 런타임에 특정 클래스의 인스턴스를 동적으로 생성
  Class   clazz = Class.forName("com.acorn.Acorn");
  Object  obj= clazz.getDeclaredConstructor().newInstance();
  

//객체생성을 하는 다른 방법
1)  new
2 ) 클래스정보를 얻어서 객체를 생성할 수 있다

java애플리케이션  < ---- > 데이터베이스 
Connection conn=null;
Statement stmt=null;
ResultSet rs=null;

Class.forName("oracle.jdbc.driver.OracleDriver");       //클래스정보 얻어오기  
conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "system", "1234");
stmt = conn.createStatement();
String sql = "select * from member_tbl_11";
rs = stmt.executeQuery(sql);
    

2. 변경에 유리한 코드작성하기
   :  (인터페이스  ,      reflect사용하기 )

######################### ##############################
실습과제!  <2인 1조 과제>- 계산기프로그램 참조
1. 원하는 클래스를 만들고  reflect를 이용하여 클래스의 정보및 매서드 호출해보기
2. 변경에 유리한 코드를 이용한 간단한 프로그램 작성하기
   -요리사프로그램(예시입니다)
   -요리사 프로그램은 특정요리사에 의존하지 않고 요리를 만드는 프로그램으로 작성한다
   -요리사가 퇴직시 코드의 변경없이 외부파일에 요리사 정보만을 변경해서 프로그램이 정상적으로 수행
    될 수 있도록 한다
    프로그램의 크기는 두 사람이 결정함 
#######################################################

//프로그램시작  반복문:  종료조건
// 한식당 이므로  Cook인터페이스에는 한식 요리 3개 만드는 매서드 정하기  예시) 돼지불백,  모둠쌈밥,  불고기된장찌게 
//  Store 클래스   (가게클래스)
//  Cook인터페이스를 구현한  길동요리사클래스만들기 (Cook기능을 구현한 클래스 만들기)   
//  길동Cook 사용하다가 다른 길순Cook으로 바뀌어도 프로그램의 변경 사항이 없도록 하기

 1. 주문하기 
 2. 메뉴보여주기  
 3. 요리사 객체를 이용하여 요리하기 
 4. 요리음식 출력하기
 






  