자바2) 1일차 

학습목표 :   

1.  ArrayList<Acorn> 형의 객체배열을 정렬할 수 있다 
   -  Comparable인터페이스와 Comparator 인터페이스를 구현할 수 있다.
2.  라이브러리를 만들 때 인터페이스를 활용하는 경우를 이해할 수 있다
3.  인터페이스의 static과 default를 구분할 수 있다.
4.  간단한 제네릭클래스를 작성 할 수 있다.
5.  간단한 제한된 제네릭 클래스를 작성 할 수 있다.
6.  간단한 제네릭 매서드를 작성 할 수 있다.  
7.  매서드 인자에서  와일드카드 사용하는 법을 이해할 수 있다

 

<< 주로 매서드 매개변수에서 사용>>
      와일드 카드 ? 사용법   (매개변수의 유연함을 제공함)
    1)    ?   =>  <? extends Object>와  동일한 효과 
    2)  <? extends T > : T와 T를 상속받은 클래스를 의미함( T이하  - T상한)   
    3)   <?  super T >  : T와 T 이상    (T하한)  
     세 개의 키워드의 의미 이해할 수 있다.  
 


알아두기 !! 
 
제네릭클래스와 제네릭 매서드를 직접만들어야 한다기 보다  제네릭을 이해하고 경험하는 시간을 갖도록 합시다
자바코드를 작성하거나 자바코드를 경험하다 보면  자연스럽게 제네릭이 이해될 수 있다.
직접작성하는 것에 큰 부담감을 갖지 말기 



#################
    라이브러리 실습
1. 다음의 세가지 매서드를  라이브러리를 만드시오
1) 별(★ )을   3번 출력하는 매서드 만들기 
2)  원하는 문자를 3번 출력하는 매서드 만들기
3)  원하는 코드를 3번 실행해 주는 매서드 만들기
 

##############
2. 제네릭실습 
1) 간단한 제네릭매서드 3 만들기 
2) 지네릭매서드 만들기 문제
   -  String[] strings = {"apple", "banana", "orange", "grape", "kiwi"}; 에서  "orange"의 위치 반환하는 매서드 만들기 
   -  위의 매서드를  지네릭매서드로 만들기  
 
 

오늘의 요리사 찾기 프로그램
################################
학생 - 자신의 이름으로 클래스를 작성한다.
################################
1.  제공된 Cook 클래스를 상속받는다.                              ( 3개의 인터페이스가 제공된다   한식가능한, 중식가능한, 일식가능한 ) 
2.  3가지 인터페이스 중에서 한 가지만 구현합니다.  (선택)   (  예시 :  class WJY extends Cook  implements  한식가능한   ) 
    => 제출

3.  요리사프로그램 !!
     오늘의 요리사를 찾는 프로그램 
     오늘의 요리사가 선정됨

  
############################
오늘의 요리사 프로그램 동작순서 
1. Cook을 상속받은 19개의 각기 다른 클래스를  Cook형 ArrayList에 저장한다
2. 3개의  한식가능한, 중식가능한, 일식가능한  요리사 그룹으로 나눈다
3. 컴퓨터의 랜덤으로 3개의 요리사 그룹중에 한 개를 선택한다
4. 선택된 요리사그룹 중에서 랜덤의 요리사 한 명을 선택한다.
5. 오늘의 요리사를 30초 후에 발표한다. ( Thread.sleep )


 
 




